{"version":3,"sources":["components/FilterMenu.jsx","constants/menus.js","utils/string.js","components/Habit.jsx","hooks/useInterval.js","hooks/useCircularList.js","components/MemoForm.jsx","components/Memo.jsx","components/Input.jsx","App.js","hooks/useLocalStorage.js","utils/createUUID.js","serviceWorker.js","index.js"],"names":["FilterMenu","handleFilterMenu","MENUS","className","onClick","e","target","map","menu","i","key","text","toUpperCase","slice","ArrowButton","direction","clickHandler","aria-hidden","Habit","callback","delayTime","list","useState","index","setIndex","before","useCallback","prevIndex","length","next","useMemo","useCircularList","habits","habit","useEffect","intervalId","setInterval","clearInterval","MemoForm","id","editMemo","deleteMemo","Memo","filter","memos","memo","RadioMenus","menus","currentMenu","RadioItem","type","name","value","defaultChecked","htmlFor","TextArea","onChange","SubmitButton","Input","handleInputMenu","handleSubmit","changeInputText","App","defaultState","item","setItem","localStorageResult","localStorage","getItem","JSON","parse","stringify","useLocalStorage","setMemos","filterMenu","setFilterMenu","deleteID","prevMemos","setCurrentMenu","setText","selectedMenu","selectedMemo","innerText","Math","random","toString","substr","inputMenu","inputText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9e1c081.chunk.js","sourcesContent":["import React from 'react';\nimport { WORK_MENU, LIFE_MENU, HOBBY_MENU, WISH_MENU, HEALTH_MENU, HABIT_MENU, ALL_MENU } from '../constants/menus';\nimport { upperCaseAtFirst } from '../utils/string';\n\nexport default function FilterMenu({ handleFilterMenu }) {\n\tconst MENUS = [ALL_MENU, WORK_MENU, LIFE_MENU, HOBBY_MENU, WISH_MENU, HEALTH_MENU, HABIT_MENU];\n\n\treturn (\n\t\t<nav className=\"menus-container\">\n\t\t\t<ul className=\"menus\" onClick={(e) => handleFilterMenu(e.target.className)}>\n\t\t\t\t{MENUS.map((menu, i) => (\n\t\t\t\t\t<li className={menu} key={i}>\n\t\t\t\t\t\t{upperCaseAtFirst(menu)}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</nav>\n\t);\n}\n","export const MEMOS_KEY = 'memos';\n\nexport const WORK_MENU = 'work';\nexport const LIFE_MENU = 'life';\nexport const HOBBY_MENU = 'hobby';\nexport const WISH_MENU = 'wish';\nexport const HEALTH_MENU = 'health';\nexport const HABIT_MENU = 'habit';\nexport const ALL_MENU = 'all';\n","export function upperCaseAtFirst(text) {\n\treturn text[0].toUpperCase() + text.slice(1);\n}\n","import React from 'react';\nimport { useCircularList } from './../hooks/useCircularList';\nimport { useInterval } from './../hooks/useInterval';\n\nconst LEFT = 'left';\nconst RIGHT = 'right';\nconst DELAY_TIME = 5000;\nconst DEFAULT_TEXT = '이곳에 습관 텍스트가 나옵니다.';\n\nconst ArrowButton = ({ direction, clickHandler }) => (\n\t<button className={`habit__${direction}__btn`} onClick={clickHandler}>\n\t\t<i className={`fa fa-chevron-${direction}`} aria-hidden=\"true\"></i>\n\t</button>\n);\n\nexport default function Habit({ habits }) {\n\tconst [habit, before, next] = useCircularList(habits);\n\tuseInterval(next, DELAY_TIME);\n\n\treturn (\n\t\t<header className=\"habit\">\n\t\t\t<div className=\"habit__div\">\n\t\t\t\t<span className=\"habbit__text\">{habit?.text || DEFAULT_TEXT}</span>\n\t\t\t</div>\n\t\t\t<div className=\"habit__btn__container\">\n\t\t\t\t<ArrowButton key={LEFT} direction={LEFT} clickHandler={before} />\n\t\t\t\t<ArrowButton key={RIGHT} direction={RIGHT} clickHandler={next} />\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n","import { useEffect } from 'react';\n\nexport function useInterval(callback, delayTime) {\n\tuseEffect(() => {\n\t\tconst intervalId = setInterval(() => {\n\t\t\tcallback();\n\t\t}, delayTime);\n\n\t\treturn () => {\n\t\t\tclearInterval(intervalId);\n\t\t};\n\t}, [callback, delayTime]);\n}\n","import { useState, useCallback, useMemo } from 'react';\n\nexport function useCircularList(list) {\n\tconst [index, setIndex] = useState(0);\n\n\tconst before = useCallback(() => {\n\t\tsetIndex((prevIndex) => prevIndex - 1 || list.length - 1);\n\t}, [list.length]);\n\n\tconst next = useCallback(() => {\n\t\tsetIndex((prevIndex) => (prevIndex + 1) % list.length);\n\t}, [list.length]);\n\n\tconst item = useMemo(() => list[index], [list, index]);\n\n\treturn [item, before, next];\n}\n","import React from 'react';\n\nexport default function MemoForm({ menu, text, id, editMemo, deleteMemo }) {\n\treturn (\n\t\t<li className=\"memo\">\n\t\t\t<div className=\"memo__text\" id={id} onClick={(e) => editMemo(e.target, menu)}>\n\t\t\t\t{text}\n\t\t\t</div>\n\t\t\t<div className=\"memo__info\">\n\t\t\t\t<span className=\"memo__menu\" id={id}>\n\t\t\t\t\t{menu}\n\t\t\t\t</span>\n\t\t\t\t<i className=\"fas fa-trash-alt memo__delete__btn\" id={id} onClick={(e) => deleteMemo(e.target.id)}></i>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n","import React from 'react';\nimport MemoForm from './MemoForm';\nimport { ALL_MENU } from '../constants/menus';\n\nexport default function Memo({ filter, memos, deleteMemo, editMemo }) {\n\treturn (\n\t\t<main className=\"memos__container\">\n\t\t\t{memos\n\t\t\t\t.filter((memo) => memo.menu === filter || filter === ALL_MENU)\n\t\t\t\t.map((memo) => (\n\t\t\t\t\t<MemoForm\n\t\t\t\t\t\tkey={memo.id}\n\t\t\t\t\t\tmenu={memo.menu}\n\t\t\t\t\t\ttext={memo.text}\n\t\t\t\t\t\tid={memo.id}\n\t\t\t\t\t\teditMemo={editMemo}\n\t\t\t\t\t\tdeleteMemo={deleteMemo}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</main>\n\t);\n}\n","import React from 'react';\nimport { WORK_MENU, LIFE_MENU, HOBBY_MENU, WISH_MENU, HEALTH_MENU, HABIT_MENU } from '../constants/menus';\n\nconst RadioMenus = ({ menus, onClick, currentMenu }) => (\n\t<div className=\"input__menus\" onClick={onClick}>\n\t\t{menus.map((menu, i) => (\n\t\t\t<RadioItem key={i} menu={menu} currentMenu={currentMenu} />\n\t\t))}\n\t</div>\n);\nconst RadioItem = ({ menu, currentMenu }) => (\n\t<div>\n\t\t<input type=\"radio\" name=\"menu\" id={menu} value={menu} defaultChecked={menu === currentMenu} />\n\t\t<label htmlFor={menu}>{menu}</label>\n\t</div>\n);\n\nconst TextArea = ({ value, onChange }) => (\n\t<textarea className=\"input__memo input__memo__text\" value={value} onChange={onChange} />\n);\n\nconst SubmitButton = ({ onClick }) => (\n\t<button className=\"input__memo__submit\" onClick={onClick}>\n\t\t<i className=\"fa fa-paper-plane input__memo__submit__btn\" aria-hidden=\"true\"></i>\n\t</button>\n);\n\nexport default function Input({ text, currentMenu, handleInputMenu, handleSubmit, changeInputText }) {\n\tconst MENUS = [WORK_MENU, LIFE_MENU, HOBBY_MENU, WISH_MENU, HEALTH_MENU, HABIT_MENU];\n\n\tconst changeHandler = (e) => changeInputText(e.target.value);\n\tconst changeMenu = (e) => handleInputMenu(e.target.value);\n\n\treturn (\n\t\t<div className=\"input-container\">\n\t\t\t<div className=\"input__memos__form\">\n\t\t\t\t<RadioMenus menus={MENUS} onClick={changeMenu} currentMenu={currentMenu} />\n\t\t\t\t<TextArea value={text} onChange={changeHandler} />\n\t\t\t</div>\n\t\t\t<SubmitButton onClick={handleSubmit} />\n\t\t</div>\n\t);\n}\n","import React, { useState, useMemo } from 'react';\nimport FilterMenu from './components/FilterMenu.jsx';\nimport Habit from './components/Habit.jsx';\nimport Memo from './components/Memo.jsx';\nimport Input from './components/Input.jsx';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport { createUUID } from './utils/createUUID';\nimport { MEMOS_KEY, WORK_MENU, HABIT_MENU, ALL_MENU } from './constants/menus';\nimport './App.css';\nexport default function App() {\n\tconst [memos, setMemos] = useLocalStorage({\n\t\tkey: MEMOS_KEY,\n\t\tdefaultState: [],\n\t});\n\tconst habits = useMemo(() => memos.filter(({ menu }) => menu === HABIT_MENU), [memos]);\n\n\tconst [filterMenu, setFilterMenu] = useState(ALL_MENU);\n\n\t// * deleteMemo\n\tconst deleteMemo = (deleteID) => {\n\t\tsetMemos((prevMemos) => prevMemos.filter((memo) => memo.id !== deleteID));\n\t};\n\n\t// * editMemo\n\tconst editMemo = (selectedMemo, selectedMenu) => {\n\t\tdeleteMemo(selectedMemo.id);\n\t\tsetText(selectedMemo.innerText);\n\t\tsetCurrentMenu(selectedMenu);\n\t\t// handleInputMenu(menu);\n\t};\n\n\t// * Input\n\tconst [currentMenu, setCurrentMenu] = useState(WORK_MENU);\n\tconst [text, setText] = useState('');\n\n\tconst handleInputMenu = (inputMenu) => {\n\t\tif (inputMenu) {\n\t\t\tsetCurrentMenu(inputMenu);\n\t\t}\n\t};\n\n\tconst changeInputText = (inputText) => {\n\t\tsetText(inputText);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (text !== '') {\n\t\t\tconst id = createUUID();\n\t\t\tsetMemos((prevMemos) => [...prevMemos, { menu: currentMenu, text, id }]);\n\t\t\tsetText('');\n\t\t}\n\t};\n\n\tconst handleFilterMenu = (selectedMenu) => {\n\t\tsetFilterMenu(selectedMenu);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"page\">\n\t\t\t\t<Habit habits={habits} />\n\t\t\t\t<FilterMenu handleFilterMenu={handleFilterMenu} />\n\t\t\t\t<Memo filter={filterMenu} memos={memos} deleteMemo={deleteMemo} editMemo={editMemo} />\n\t\t\t\t<Input\n\t\t\t\t\ttext={text}\n\t\t\t\t\tcurrentMenu={currentMenu}\n\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\thandleInputMenu={handleInputMenu}\n\t\t\t\t\tchangeInputText={changeInputText}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage({ key, defaultState }) {\n\tconst [item, setItem] = useState(defaultState);\n\n\tuseEffect(() => {\n\t\tconst localStorageResult = localStorage.getItem(key);\n\t\tif (localStorageResult) {\n\t\t\tsetItem(JSON.parse(localStorageResult));\n\t\t}\n\t}, [key]);\n\n\tuseEffect(() => {\n\t\tif (item === defaultState) {\n\t\t\treturn;\n\t\t}\n\t\tlocalStorage.setItem(key, JSON.stringify(item));\n\t}, [item, key]);\n\n\treturn [item, setItem];\n}\n","export const createUUID = () => {\n\treturn '_' + Math.random().toString(36).substr(2, 9);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}